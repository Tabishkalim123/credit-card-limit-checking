
-- 1. Create Table: dataholder
CREATE TABLE dataholder (
  cardno NUMBER(10),
  name VARCHAR2(30),
  state VARCHAR2(20),
  limit_balance NUMBER(20)
);

-- 2. Insert Sample Data
INSERT INTO dataholder VALUES (1000000001, 'Amit Sharma', 'Maharashtra', 50000);
INSERT INTO dataholder VALUES (1000000002, 'Neha Verma', 'Delhi', 75000);
INSERT INTO dataholder VALUES (1000000003, 'Rahul Joshi', 'Karnataka', 60000);
INSERT INTO dataholder VALUES (1000000004, 'Sneha Reddy', 'Telangana', 45000);
INSERT INTO dataholder VALUES (1000000005, 'Vikram Mehta', 'Gujarat', 80000);
INSERT INTO dataholder VALUES (1000000006, 'Pooja Nair', 'Kerala', 70000);
INSERT INTO dataholder VALUES (1000000007, 'Ravi Kumar', 'Tamil Nadu', 90000);
INSERT INTO dataholder VALUES (1000000008, 'Anjali Singh', 'Uttar Pradesh', 55000);
INSERT INTO dataholder VALUES (1000000009, 'Suresh Patil', 'Madhya Pradesh', 30000);
INSERT INTO dataholder VALUES (1000000010, 'Kiran Bedi', 'Punjab', 95000);
INSERT INTO dataholder VALUES (1000000011, 'Manish Paul', 'Haryana', 62000);
INSERT INTO dataholder VALUES (1000000012, 'Divya Jain', 'Rajasthan', 68000);
INSERT INTO dataholder VALUES (1000000013, 'Rohit Shetty', 'Goa', 72000);
INSERT INTO dataholder VALUES (1000000014, 'Sakshi Malik', 'Himachal Pradesh', 40000);
INSERT INTO dataholder VALUES (1000000015, 'Ajay Dev', 'Chhattisgarh', 35000);
INSERT INTO dataholder VALUES (1000000016, 'Priya Das', 'West Bengal', 50000);
INSERT INTO dataholder VALUES (1000000017, 'Yogesh Tiwari', 'Bihar', 65000);
INSERT INTO dataholder VALUES (1000000018, 'Meena Kumari', 'Jharkhand', 48000);
INSERT INTO dataholder VALUES (1000000019, 'Arun Nair', 'Andhra Pradesh', 56000);
INSERT INTO dataholder VALUES (1000000020, 'Isha Kapoor', 'Assam', 52000);
INSERT INTO dataholder VALUES (1000000021, 'Shanu Jain', 'Assam', 22000);
INSERT INTO dataholder VALUES (1000000021, 'Shanu Jain', 'Assam', 22000); -- Duplicate

COMMIT;

-- 3. Check for Duplicate States
SELECT state FROM dataholder
GROUP BY state
HAVING COUNT(*) > 1;

-- 4. Check for Duplicate cardno
SELECT cardno FROM dataholder
GROUP BY cardno
HAVING COUNT(*) > 1;

-- 5. Delete One Duplicate Record Using ROWID
DELETE FROM dataholder 
WHERE ROWID = (
  SELECT ROWID FROM dataholder 
  WHERE cardno = 1000000021 AND ROWNUM = 1
);

-- 6. Add Primary Key to Prevent Future Duplicates
ALTER TABLE dataholder
ADD CONSTRAINT pk_cardno PRIMARY KEY (cardno);

-- 7. Function: Check Withdrawal Limit for a Card
CREATE OR REPLACE FUNCTION get_limitvalidation_check (
  v_cardno NUMBER,
  v_withdrawamount NUMBER
) RETURN VARCHAR2
IS
  v_limit NUMBER(20);
  v_message VARCHAR2(100);
BEGIN
  SELECT limit_balance INTO v_limit
  FROM dataholder
  WHERE cardno = v_cardno;

  IF v_limit < v_withdrawamount THEN
    v_message := 'Limit exceeded. Your limit is: ' || v_limit;
  ELSE
    v_message := 'Withdrawal allowed. Remaining limit: ' || (v_limit - v_withdrawamount);
  END IF;

  DBMS_OUTPUT.PUT_LINE(v_message);
  RETURN v_message;

EXCEPTION
  WHEN NO_DATA_FOUND THEN
    RETURN 'Card number not found.';
  WHEN OTHERS THEN
    RETURN 'An error occurred: ' || SQLERRM;
END;
/

-- 8. Test the Function (Call from PL/SQL Block or SELECT)
-- Using Anonymous Block:
DECLARE
  result VARCHAR2(100);
BEGIN
  result := get_limitvalidation_check(1000000002, 87200);
  DBMS_OUTPUT.PUT_LINE('Result: ' || result);
END;
/

-- Or using SELECT from dual (DBMS_OUTPUT won't show, but return value will)
SELECT get_limitvalidation_check(1000000002, 87200) FROM dual;